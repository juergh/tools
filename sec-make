#!/bin/bash -eu

function pr_info()  { echo -e "\033[33mI: ${*}\033[0m" ; }

function out()
{
	pr_info "Build log: ${LOG}"
}

function run_chroot()
{
	local cmd

	cmd=("schroot" "-r" "-c" "cranky--${SERIES}-amd64" "--" "${@}")
	pr_info "${cmd[*]}"
	"${cmd[@]}" 2>&1 | tee "${LOG}"
}

function usage()
{
	cat <<EOF
Usage: sec-make [-h] init|ubuntuconfig
       sec-make [-h] FILE
       sec-make [-h] DIR
       sec-make [-h] ARGS...

Wrapper around the kernel's 'make'.

Examples:
  $ sec-make ubuntuconfig
  $ sec-make drivers/android
  $ sec-make -j8 bzImage

Optional arguments:
  -h, --help           Show this help message and exit.
  -s, --series SERIES  Ubuntu series name.
EOF
}

SERIES=

while [ $# -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		-s|--series)
			shift
			SERIES=${1}
			;;
		*)
			break
			;;
	esac
	shift
done

if [ $# -eq 0 ] ; then
	usage
	exit 1
fi

if [ -z "${SERIES}" ] ; then
	SERIES=$(dpkg-parsechangelog -ldebian.master/changelog -SDistribution)
fi
if [ -z "${SERIES}" ] ; then
	echo "Failed to determine series" >&2
	exit 1
fi

O=buildd/${SERIES}
mkdir -p "${O}"

LOG=${O}/build.log
trap out EXIT

make=(
	make
	O="${O}"
)

case "${1}" in
	init)
		run_chroot "${make[@]}" clean allmodconfig prepare
		exit
		;;
	ubuntuconfig)
		run_chroot fakeroot debian/rules clean genconfigs
		cp CONFIGS/amd64-config.flavour.generic "${O}"/.config
		run_chroot "${make[@]}" prepare
		exit
		;;
esac

if [ -f "${1}" ] ; then
	run_chroot "${make[@]}" "${1%.*}".o
	exit
fi

if [ -d "${1}" ] ; then
	run_chroot "${make[@]}" -j"$(getconf _NPROCESSORS_ONLN)" M="${1%/}"
	exit
fi

run_chroot "${make[@]}" "${@}"
