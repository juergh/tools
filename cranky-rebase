#!/bin/bash -eu
#
# Wrapper around cranky rebase
#

function run()
{
	echo "-- ${*}"
	"${@}"
}

function usage()
{
	cat <<EOF
Usage: cranky-rebase [-h] [-t TAG] [cranky_rebase_args...]

Wrapper aroung 'cranky rebase'.

Optional wrapper arguments:
  -h, --help     Show this help text and exit.
  -t, --tag TAG  Rebase onto tag TAG.
  -d, --dry-run  Dry run (do not rebase).

Optional 'cranky rebase' arguments:
  -r RELEASE_REPO   Git repository to fetch the reference branch from.
  -b REMOTE_BRANCH  Remote branch to fetch from.
  -l LOCAL_BRANCH   Use LOCAL_BRANCH as the reference branch.
  -o                Rebase against own kernel.
EOF
}

CRANKY=${CRANKY:-cranky}

tag=
args=()

while [ $# -gt  0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		-t|--tag)
			shift
			tag=${1}
			;;
		-d|--dry-run)
			args+=("-d")
			;;
		*)
			args+=("${1}")
			;;
	esac
	shift
done

if [ -z "${tag}" ] ; then
	run "${CRANKY}" rebase "${args[@]}"
	exit
fi

DEBIAN=debian
if [ -e debian/debian.env ] ; then
	# shellcheck disable=SC1091
	. debian/debian.env
fi
# shellcheck disable=SC1091
. "${DEBIAN}"/etc/update.conf

echo "-- Repo: ${RELEASE_REPO}"
echo "-- Tag:  ${tag}"

run git fetch --no-tags "${RELEASE_REPO}" tag "${tag}"
run "${CRANKY}" rebase "${args[@]}" -l "${tag}"
