#!/bin/bash -eu
#
# Create a closing commit for a test release/build
#

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") [-h] [-s SUFFIX]

Create a closing debian/changlog commit.

Optional arguments:
  -h, --help           Show this help text and exit.
  -s, --suffix SUFFIX  Append SUFFIX to the package version. If not provided,
                       defaults to '+test1'.
EOF
}

suffix="+test1"

while [ $# -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		-s|--suffix)
			shift
			suffix=${1}
			;;
		*)
			usage >&2
			exit 2
			;;
	esac
	shift
done


if [ -e debian/debian.env ] ; then
	# shellcheck disable=SC1091
	. debian/debian.env
else
	DEBIAN=debian
fi

series=$(dpkg-parsechangelog -l "${DEBIAN}"/changelog -SDistribution)
if [ "${series}" = "UNRELEASED" ] ; then
	echo "Error: Series is UNRELEASED" >&2
	exit1
fi

package=$(dpkg-parsechangelog -l "${DEBIAN}"/changelog -SSource)
version=$(dpkg-parsechangelog -l "${DEBIAN}"/changelog -SVersion)

if [ "${package}" = "linux-firmware" ] ; then
	tag_prefix=Ubuntu
else
	tag_prefix=Ubuntu${package#linux}
fi

subject="UBUNTU: ${tag_prefix}-${version%%-*}-"
release=$(git log --format="%H __%s" | grep -m1 -P "__${subject}" || true)
if [ -z "${release}" ] ; then
	echo "Error: Previous release commit not found (${subject})" >&2
	exit 1
fi

new_version=${version}${suffix}

{
	echo "${package} (${new_version}) ${series}; urgency=medium"
	echo
	git log --reverse --format="  * %s" "${release%% *}"..
	echo
	echo " -- ${DEBFULLNAME} <${DEBEMAIL}>  $(date -R)"
	echo
	cat "${DEBIAN}"/changelog
} > "${DEBIAN}"/changelog.new
mv "${DEBIAN}"/changelog.new "${DEBIAN}"/changelog

git add "${DEBIAN}"/changelog
git commit -m "UBUNTU: ${tag_prefix}-${new_version}"
