#!/bin/bash -eu
#
# Create a closing commit for a test release/build
#

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") [-h] [-s SUFFIX]

Create a closing debian/changlog commit.

Optional arguments:
  -h, --help           Show this help text and exit.
  --series SERIES      Use SERIES.
  -s, --suffix SUFFIX  Append SUFFIX to the current package version. If not provided,
                       bumps the package version.
EOF
}

series=
suffix=

while [ $# -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		--series)
			shift
			series=${1}
			;;
		-s|--suffix)
			shift
			suffix=${1}
			;;
		*)
			usage >&2
			exit 2
			;;
	esac
	shift
done


if [ -e debian/debian.env ] ; then
	# shellcheck disable=SC1091
	. debian/debian.env
else
	DEBIAN=debian
fi
changelog=${DEBIAN}/changelog

if [ -z "${series}" ] ; then
	series=$(dpkg-parsechangelog -l "${changelog}" -SDistribution)
	if [ "${series}" = "UNRELEASED" ] ; then
		echo "Error: Series is UNRELEASED" >&2
		exit 1
	fi
fi

package=$(dpkg-parsechangelog -l "${changelog}" -SSource)
version=$(dpkg-parsechangelog -l "${changelog}" -SVersion)
urgency=$(dpkg-parsechangelog -l "${changelog}" -SUrgency)

tag_prefix=
case "${package}" in
	linux-firmare)
		tag_prefix=Ubuntu
		;;
	linux-*)
		tag_prefix=Ubuntu${package#linux}
		;;
esac

#subject="UBUNTU: ${tag_prefix}-${version%%-*}-"
#release=$(git log --format="%H __%s" | grep -m1 -P "__${subject}" || true)

release=$(git log --format=%H -- "${changelog}" | head -1)
if [ -z "${release}" ] ; then
	echo "Error: Previous release commit not found" >&2
	exit 1
fi

if [ -n "${suffix}" ] ; then
	new_version=${version}${suffix}
else
	digit=$(echo "${version}" | grep -o '[0-9]*$')
	new_version=${version%"${digit}"}$((digit + 1))
fi

{
	echo "${package} (${new_version}) ${series}; urgency=${urgency}"
	echo
	git log --reverse --format="  * %s" "${release%% *}"..
	echo
	echo " -- ${DEBFULLNAME} <${DEBEMAIL}>  $(date -R)"
	echo
	cat "${changelog}"
} > "${changelog}".new
mv "${changelog}".new "${changelog}"

git add "${changelog}"
if [ -n "${tag_prefix}" ] ; then
	git commit -m "UBUNTU: ${tag_prefix}-${new_version}"
else
	git commit -m "Release ${new_version}"
fi
