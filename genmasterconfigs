#!/bin/bash -eu
#
# Generate the master kernel configs
#

function run_chroot()
{
	if schroot --list --all-sessions | grep -q "session:${CHROOT}" ; then
		schroot -r -c "${CHROOT}" -- "${@}"
	else
		schroot -c "${CHROOT}" -- "${@}"
	fi
}

function out()
{
	local rc=${?}

	set +e
	trap - EXIT INT TERM HUP

	if [ "${BRANCHED}" -eq 1 ] ; then
		git checkout "${CUR_BRANCH}"
		git branch -d "${TMP_BRANCH}"
	fi

	if [ "${STASHED}" -eq 1 ] ; then
		git stash pop
	fi

	if [ -d CONFIGS.bak ] ; then
		rm -rf CONFIGS
		mv CONFIGS.bak CONFIGS
	fi

	if [ ${rc} -eq 0 ] ; then
		echo "-- Configs written to MASTERCONFIGS/"
	else
		echo "-- Error: Script failed" >&2
	fi

	exit "${rc}"
}

if ! [ -f debian/debian.env ] ; then
	echo "-- Error: Not an Ubuntu kernel tree" >&2
	exit 1
fi

master_version=$(dpkg-parsechangelog -l debian.master/changelog -S Version)
master_subject="UBUNTU: Ubuntu-(unstable-)?${master_version}"
master_oneline=$(git log --oneline | \
					 grep -m1 -P "^[0-9a-h]{12} ${master_subject//./\\.}$")

CUR_BRANCH=$(git rev-parse --abbrev-ref HEAD)
TMP_BRANCH=tmp-genmasterconfigs

STASHED=0
BRANCHED=0

trap out EXIT INT TERM HUP

if [ -n "$(git status --porcelain)" ] ; then
	echo "-- Stash local changes"
	git stash
	STASHED=1
fi

echo "-- Checkout ${master_oneline}"
git checkout -b "${TMP_BRANCH}" "${master_oneline%% *}"
BRANCHED=1

if [ -d CONFIGS ] ; then
	echo "-- Backup CONFIGS"
	rm -rf CONFIGS.bak
	mv CONFIGS CONFIGS.bak
fi

echo "-- Create configs"
fakeroot debian/rules clean
series=$(dpkg-parsechangelog -SDistribution)
if [ "${series}" = "UNRELEASED" ] ; then
	series=$(dpkg-parsechangelog -SDistribution -o1 -c1)
fi

CHROOT=cranky--${series}-amd64
run_chroot debian/rules genconfigs || true

rm -rf MASTERCONFIGS
mv CONFIGS MASTERCONFIGS
