#!/usr/bin/env python3
#
# Run git log and ammend the output with UCT information
#

import json
import os
import sys

import git

def red(text):
    return f"\033[31m{text}\033[00m"

def green(text):
    return f"\033[32m{text}\033[00m"

def yellow(text):
    return f"\033[33m{text}\033[00m"

def lred(text):
    return f"\033[91m{text}\033[00m"

def lgreen(text):
    return f"\033[92m{text}\033[00m"

def lyellow(text):
    return f"\033[93m{text}\033[00m"

if len(sys.argv) > 1:
    start = sys.argv[1]
else:
    start = "HEAD"

with open("/home/juergh/git/juergh/tools/uct.json", encoding="UTF-8") as fh:
    uct = json.load(fh)

fixed = {}
repo = git.Repo(os.getcwd())

for commit in repo.iter_commits(start):
    sha = commit.hexsha
    subject = commit.summary

    deco = ""
    cve = uct["sha"].get(sha)
    if cve:
        name = cve["cve"]
        break_fix = cve["break_fix"]
        if break_fix == "fix":
            deco = lgreen(f"({name}) ")
            fixed[name] = 1
        else:
            if name in fixed:
                deco = lyellow(f"({name}) ")
            else:
                deco = lred(f"({name}) ")

    try:
        print(f"{yellow(sha[:12])} {deco}{subject}")
    except BrokenPipeError:
        break
