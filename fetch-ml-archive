#!/bin/bash -eu

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") [-h] ARCHIVE

Fetch an email archive.

Positional arguments:
  ARCHIVE     File containing NAME and URL of the Mailing list archive.

Optional arguments:
  -h, --help  Show this help text and exit.
EOF
}

declare -A month=(
	[january]=01
	[february]=02
	[march]=03
	[april]=04
	[may]=05
	[june]=06
	[july]=07
	[august]=08
	[september]=09
	[october]=10
	[november]=11
	[december]=12
)

archive=

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		*)
			if [ -n "${archive}" ] ; then
				echo "Invalid argument: ${1}" >&2
				exit 2
			fi
			archive=${1}
			;;
	esac
	shift
done

if [ -z "${archive}" ] ; then
	usage
	exit 2
fi

read -r name url < "${archive}"

if [ -z "${name}" ] || [ -z "${url}" ] ; then
	echo "Invalid content: ${1}" >&2
	exit 1
fi

mkdir -p "${name}"
cd "${name}"

# Remove the newest archive (could be incomplete/partial)
ls 20*.txt 2>/dev/null | tail -1 | xargs rm -f

# Fetch and unpack archives
while IFS= read -r gz ; do
	f=${gz%.gz}
	y=${f%%-*}
	m=${f%.txt}
	m=${m##*-}
	n=${y}-${month[${m,,}]}.txt

	if [ -e "${n}" ] ; then
		continue
	fi

	rm -f "${gz}"
	wget "${url}"/"${gz}"
	gunzip "${gz}"

	mv "${f}" "${n}"
done < <(curl -s "${url}" | grep -oP '20.*?\.txt\.gz')
