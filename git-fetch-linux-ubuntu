#!/bin/bash -eu
#
# To initialize the repo:
#   $ mkdir linux-ubuntu.git
#   $ cd linux-ubuntu.git
#   $ git init --bare
#   $ git config gc.auto 0
#   $ git config fetch.negotiationAlgorithm skipping
#   $ echo "/<path>/linux.git/objects" > objects/info/alternates
#

HERE=$(dirname "$(readlink -f "${0}")")

function out()
{
	local rc=${?}

	trap - EXIT INT TERM HUP

	if [ ${rc} -ne 0 ] ; then
		echo "Script failed" >&2
	fi

	exit "${rc}"
}

function ubuntu_kernel_info()
{
	"${HERE}"/ubuntu-kernel-info \
		--field series.name,package.name,package.repo.url,package.repo.branch \
		--pkg-type main \
		"${@}"
}

function usage()
{
	cat <<EOF
Usage: git-fetch-linux-ubuntu [-h]

Fetch Ubuntu kernels.

Optional arguments:
  -h, --help  Show this help text and exit.
EOF
}

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		*)
			echo "Invalid argument: ${1}" >&2
			exit 2
			;;
	esac
	# shellcheck disable=SC2317
	shift
done

if ! [ -e config ] ; then
	echo "No such file: config" >&2
	exit 1
fi

trap out EXIT INT TERM HUP

# Remove all remotes
while IFS= read -r remote ; do
	git remote remove "${remote}" 2>/dev/null
done < <(git remote)

# Add remotes
while IFS=" " read -r series package url branch ; do
	if [ "${package}" = "linux-unstable" ] ; then
		series=unstable
	fi

	remote=${series}/${package}
	tag_prefix=Ubuntu${package#linux}

	git remote add "${remote}" "${url}"
	git config remote."${remote}".tagopt "--no-tags"
	git config --unset-all remote."${remote}".fetch || true
	git config --add remote."${remote}".fetch "+refs/heads/${branch}:refs/heads/${remote}"
	for v in $(seq 1 9) ; do
		git config --add remote."${remote}".fetch "+refs/tags/${tag_prefix}-${v}*:refs/tags/${tag_prefix}-${v}*"
	done

done < <(
	ubuntu_kernel_info --src-name linux-unstable devel
	ubuntu_kernel_info supported,supported-esm
)

# Fetch everything
git fetch --all
