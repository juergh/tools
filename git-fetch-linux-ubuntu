#!/bin/bash -u
#
# To initialize the repo:
#   $ mkdir linux-ubuntu.git
#   $ cd linux-ubuntu.git
#   $ git init --bare
#   $ git config gc.auto 0
#   $ git config fetch.negotiationAlgorithm skipping
#   $ echo "/<path>/linux.git/objects" > objects/info/alternates
#

HERE=$(dirname "$(readlink -f "${0}")")

function out()
{
	local rc=${?}

	trap - EXIT INT TERM HUP

	if [ ${rc} -ne 0 ] ; then
		echo "-- Script failed" >&2
	fi

	exit ${rc}
}

function ubuntu_kernel_info()
{
	"${HERE}"/ubuntu-kernel-info \
		--field series.name,package.name,package.repo.url,package.repo.branch \
		--pkg-type main \
		"${@}"
}

function usage()
{
	cat <<EOF
Usage: git-fetch-linux-ubuntu [-h]

Fetch Ubuntu kernels.

Optional arguments:
  -h, --help  Show this help text and exit.
EOF
}

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		*)
			echo "Invalid argument: ${1}" >&2
			exit 2
			;;
	esac
	# shellcheck disable=SC2317
	shift
done

if ! [ -e config ] ; then
	echo "No such file: config" >&2
	exit 1
fi

trap out EXIT INT TERM HUP

while IFS=" " read -r _yymm series package url branch ; do
	if [ "${package}" = "linux-unstable" ] || [ "${url/unstable/}" != "${url}" ] ; then
		series=unstable
	fi

	local_branch=${series}/${package}
	tag_prefix=Ubuntu${package#linux}

	echo "-- Fetch branch from ${url} (${branch} -> ${local_branch})"
	refs=("refs/heads/${branch}:refs/heads/${local_branch}")
	git fetch --force --no-tags "${url}" "${refs[@]}"

	echo "-- Fetch tags from ${url}"
	refs=()
	for v in $(seq 1 9) ; do
		refs+=("refs/tags/${tag_prefix}-${v}*:refs/tags/${tag_prefix}-${v}*")
	done
	git fetch --force --no-tags "${url}" "${refs[@]}"

done < <(
	"${HERE}"/ubuntu-kernel-info \
		--pkg-type main \
		--field series.yymm,series.name,package.name,package.repo.url,package.repo.branch \
		supported-esm,supported,devel | \
		sort -V
)
