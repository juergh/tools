#!/bin/bash -eu
#
# upkg: Package manager for Ubuntu kernel (image, debug and source) packages.
#       Used in conjunction with ucrash.
#

# -----------------------------------------------------------------------------
# Helper functions

function verify_pkg_index()
{
	local pkg_index=${1}

	# Verify that the package index is valid
	# shellcheck disable=SC2012
	if  ! [[ "${pkg_index}" =~ ^[0-9]+$ ]] || \
		  [ "${pkg_index}" -lt 1 ] || \
		  [ "${pkg_index}" -gt "$(ls -1d "${UPKG_DIR}"/*/*/* | wc -l)" ] ; then
		echo "Error: Invalid package index: ${pkg_index}" >&2
		exit 1
	fi
}

function install_source_pkg()
{
	local pkg_file=${1}
	local source version inst_dir

	source=${pkg_file##*/}
	source=${source%_*}

	version=${pkg_file##*/}
	version=${version#*_}
	version=${version%.dsc}

	# The source package installation directory
	inst_dir=${UPKG_DIR}/${source}/${version}/all/src

	# Install the source package
	echo -n "Installing source package ${pkg_file##*/} ... "
	rm -rf "${inst_dir}"
	mkdir -p  "${inst_dir%/*}"
	dpkg-source --no-check -x "${pkg_file}" "${inst_dir}" > /dev/null
	echo "done"
}

function install_binary_pkg()
{
	local pkg_file=${1}
	local package source version arch flavor stamp inst_dir

	package=$(dpkg-deb --field "${pkg_file}" Package)
	source=$(dpkg-deb --field "${pkg_file}" Source)
	version=$(dpkg-deb --field "${pkg_file}" Version)
	arch=$(dpkg-deb --field "${pkg_file}" Architecture)

	case "${source}" in
		linux-signed*)
			echo "Error: Invalid source package: ${source}" >&2
			exit 1
			;;
	esac

	case "${package}" in
		linux-image-unsigned-*-dbgsym)
			flavor=${package#linux-image-unsigned-*-}
			flavor=${flavor#*-}
			flavor=${flavor%-dbgsym}
			stamp=.dbg
			;;
		linux-image-*-dbgsym)
			flavor=${package#linux-image-*-}
			flavor=${flavor#*-}
			flavor=${flavor%-dbgsym}
			stamp=.dbg
			;;
		linux-image-unsigned-*)
			flavor=${package#linux-image-unsigned-*-}
			flavor=${flavor#*-}
			stamp=.img
			;;
		linux-image-*)
			flavor=${package#linux-image-*-}
			flavor=${flavor#*-}
			stamp=.img
			;;
		linux-modules-*)
			flavor=${package#linux-modules-*-}
			flavor=${flavor#*-}
			stamp=.mod
			;;
		*)
			echo "Error: Unsupported package: ${pkg_file}" >&2
			exit 1
			;;
	esac

	# The binary package installation directory
	inst_dir=${UPKG_DIR}/${source}/${version}/${arch}/${flavor}

	# Install the binary package
	echo -n "Installing binary package ${pkg_file##*/} ... "
	mkdir -p "${inst_dir}"
	dpkg-deb -x "${pkg_file}" "${inst_dir}"
	touch "${inst_dir}/${stamp}"
	echo "done"
}

function install_pkg_files()
{
	local pkg_file

	for pkg_file in "${@}" ; do
		if ! [ -e "${pkg_file}" ] ; then
			echo "Error: No such package file: ${pkg_file}" >&2
			exit 1
		fi

		case "${pkg_file}" in
			*.dsc)
				install_source_pkg "${pkg_file}"
				;;
			*.deb|*.ddeb)
				install_binary_pkg "${pkg_file}"
				;;
			*)
				echo "Error: Unsupported package: ${pkg_file}" >&2
				exit 1
				;;
		esac
	done
}

function list_pkgs()
{
	local fmt num inst_dir source version arch flavor

	fmt="%3s   %-20s   %-20s   %-10s   %-7s   %3s   %3s   %3s   %3s\n"

	# shellcheck disable=SC2059
	printf "${fmt}" "Idx" "Source" "Version" "Flavor" "Arch" "Dbg" "Img" "Mod" "Src"
	printf "%0.s-" {1..96}
	echo

	num=1
	# shellcheck disable=SC2035
	for inst_dir in $(cd "${UPKG_DIR}" && ls -1d */*/*/* 2>/dev/null) ; do
		IFS="/" read -r source version arch flavor < <(echo "${inst_dir}")
		if [ "${arch}" = "all" ] ; then
			continue
		fi

		[ -f "${UPKG_DIR}/${inst_dir}/.dbg" ] && dbg=" * " || dbg=
		[ -f "${UPKG_DIR}/${inst_dir}/.img" ] && img=" * " || img=
		[ -f "${UPKG_DIR}/${inst_dir}/.mod" ] && mod=" * " || mod=

		[ -d "${UPKG_DIR}/${inst_dir}/../../all/src" ] && src=" * " || src=

		# shellcheck disable=SC2059
		printf "${fmt}" "${num}" "${source}" "${version}" "${flavor}" "${arch}" \
			   "${dbg}" "${img}" "${mod}" "${src}"

		num=$((num + 1))
	done
}

function list_pkgs_files()
{
	local pkg_index=${1}
	local inst_dir

	verify_pkg_index "${1}"

	# shellcheck disable=SC2012
	inst_dir=$(ls -1d "${UPKG_DIR}"/*/* | head "-${pkg_index}" | tail -1)
	find "${inst_dir}" | sed "s,^${UPKG_DIR}/,,"
}

# -----------------------------------------------------------------------------
# Commands

function do_install()
{
	if [ "${#}" -gt 0 ] ; then
		install_pkg_files "${@}"
	else
		usage
		exit 2
	fi
}

function do_list()
{
	if [ "${#}" -eq 0 ] ; then
		list_pkgs
	elif [ "${#}" -eq 1 ] ; then
		list_pkgs_files "${1}"
	else
		usage
		exit 2
	fi
}

function do_remove()
{
	local inst_dir

	if [ "${#}" -ne 1 ] ; then
		usage
		exit 2
	fi
	pkg_index=${1}

	verify_pkg_index "${pkg_index}"

	# shellcheck disable=SC2012
	inst_dir=$(ls -1d "${UPKG_DIR}"/*/*/* | head -"${pkg_index}" | tail -1)

	echo -n "Removing package(s) ... "
	rm -rf "${inst_dir}"
	rmdir "${inst_dir%/*}" 2>/dev/null || true
	echo "done"
}

function usage()
{
	cat <<EOF
Usage: upkg [-h] COMMAND [ARGS]

Ubuntu kernel (debug) package manager.

Available commands:
  install PKG_FILE [PKG_FILE ...]
                    Install the provided package(s).
  list [PKG_INDEX]  List all installed packages or, if PKG_INDEX is specified,
                    the files provided by the package(s) with the index
                    PKG_INDEX.
  remove PKG_INDEX  Remove the package(s) with the index PKG_INDEX.

Optional arguments:
  -h, --help        Show this help text and exit.
EOF
}

# -----------------------------------------------------------------------------
# Main entry point

if [ "$(id -u)" = "0" ] ; then
	echo "Error: You should not run as root" >&2
	exit 1
fi

# upkg root directory
UPKG_DIR=${HOME}/.cache/upkg
[ -d "${UPKG_DIR}" ] || mkdir -p "${UPKG_DIR}"

# Parse the commandline options
while [ ${#} -gt 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		install|list|remove)
			cmd=${1}
			shift
			"do_${cmd}" "${@}"
			exit
			;;
		*)
			echo "Error: Invalid argument: ${1}" >&2
			exit 2
			;;
	esac
	shift
done

usage
exit 2
