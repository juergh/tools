#!/bin/bash
#
# List unreleased commits on linux-firmware branches
#

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") [-h] [--head]

Optional arguments:
  --head      Show branch HEADs.
  -h, --help  Show this help text and exit.
EOF
}

head=0

while [ ${#} -gt 0 ] ; do
	case "${1}" in
		--head)
			head=1
			;;
		-h|--help)
			usage
			exit
			;;
		*)
			usage
			exit 2
			;;
	esac
	shift
done

git fetch origin

while IFS= read -r branch ; do
	echo "-- $branch"
	if ! git rev-parse "${branch}" &>/dev/null ; then
		echo "Branch does not exist"
		echo
		continue
	fi

	if [ ${head} -eq 1 ] ; then
		git --no-pager log --oneline "${branch}" -1
	fi

	version=$(git show "${branch}":debian/changelog | \
	          dpkg-parsechangelog -l- -Sversion)
	if [ "${version%.0}" != "${version}" ] ; then
		# Dummy initial SRU release version, pull the next one
		version=$(git show "${branch}":debian/changelog | \
		          dpkg-parsechangelog -l- -Sversion -o1 -c1)
	fi
	tag=Ubuntu-${version}

	git --no-pager log --oneline "${tag}".."${branch}"
	git --no-pager log --oneline "${branch}"..origin/"${branch}"
	echo
done < <(
	if [ ${head} -eq 1 ] ; then
		echo "main"
	fi
	{
		ubuntu-distro-info --supported-esm
		ubuntu-distro-info --supported
		ubuntu-distro-info --devel
	} | sort -u
)
